// <auto-generated />
using System;
using HW_cookie_autentification.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HW_cookie_autentification.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20230531140842_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Create")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modify")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2235),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2238),
                            Name = "Pavel"
                        },
                        new
                        {
                            Id = 2,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2242),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2244),
                            Name = "Vitaliy"
                        },
                        new
                        {
                            Id = 3,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2246),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2248),
                            Name = "Dmitry"
                        });
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Create")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modify")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2313),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2316)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2321),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2323)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 2,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2325),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2327)
                        });
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Create")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modify")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Create")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modify")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2280),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2282),
                            Name = "Oil",
                            ProductTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2287),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2289),
                            Name = "Butter",
                            ProductTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2292),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2293),
                            Name = "Bread",
                            ProductTypeId = 2
                        });
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Create")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modify")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2142),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2188),
                            Name = "Oils"
                        },
                        new
                        {
                            Id = 2,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2194),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2196),
                            Name = "Eats"
                        },
                        new
                        {
                            Id = 3,
                            Create = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2198),
                            Modify = new DateTime(2023, 5, 31, 17, 8, 42, 27, DateTimeKind.Local).AddTicks(2200),
                            Name = "Water"
                        });
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.Order", b =>
                {
                    b.HasOne("HW_cookie_autentification.Models.ShopModels.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.OrderProduct", b =>
                {
                    b.HasOne("HW_cookie_autentification.Models.ShopModels.Order", "Order")
                        .WithMany("OrderProduct")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HW_cookie_autentification.Models.ShopModels.Product", "Product")
                        .WithMany("OrderProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.Product", b =>
                {
                    b.HasOne("HW_cookie_autentification.Models.ShopModels.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.Order", b =>
                {
                    b.Navigation("OrderProduct");
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.Product", b =>
                {
                    b.Navigation("OrderProduct");
                });

            modelBuilder.Entity("HW_cookie_autentification.Models.ShopModels.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
